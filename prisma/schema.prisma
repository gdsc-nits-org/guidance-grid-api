// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  uname          String     @unique
  email          String     @unique
  name           String
  password       String
  profileImage   String?
  profileBanner  String?
  bio            String?
  linkedInHandle String?
  githubHandle   String?
  facebookHandle String?
  article        Article[]
  Bookmark       Bookmark[]
  Comment        Comment[]
  Vote           Vote[]
}

model Article {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  createdAt DateTime   @default(now())
  author    User       @relation(fields: [userId], references: [id])
  userId    String     @db.ObjectId
  tags      String[]
  Votes     Int        @default(0)
  Bookmark  Bookmark[]
  Comment   Comment[]
  Vote      Vote[]
}

model Vote {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  article   Article @relation(fields: [articleId], references: [id])
  articleId String  @db.ObjectId
  upvotedBy User    @relation(fields: [userId], references: [id])
  userId    String  @db.ObjectId
  vote      Int

  @@unique([articleId, userId])
}

model Bookmark {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  article      Article @relation(fields: [articleId], references: [id])
  articleId    String  @db.ObjectId
  bookmarkedBy User    @relation(fields: [userId], references: [id])
  userId       String  @db.ObjectId

  @@unique([articleId, userId])
}

model Comment {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  article   Article @relation(fields: [articleId], references: [id])
  articleId String  @db.ObjectId
  commentBy User    @relation(fields: [userId], references: [id])
  userId    String  @db.ObjectId
  comment   String
}
